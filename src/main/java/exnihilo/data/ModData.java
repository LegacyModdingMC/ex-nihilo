package exnihilo.data;

import cpw.mods.fml.common.ModMetadata;
import net.minecraftforge.common.config.Configuration;

public class ModData {
  public static final String ID = "exnihilo";

  public static final String NAME = "Ex Nihilo";

  public static final String TEXTURE_LOCATION = "exnihilo";

  public static void setMetadata(ModMetadata data) {
    data.autogenerated = false;
    data.url = "http://www.minecraftforum.net/topic/1981778-";
    data.credits = "Cooley, for being my besty. =)";
    data.authorList.add("Erasmus Crowley");
    data.description = "Making the whole world renewable.";
    data.logoFile = "";
    data.updateUrl = "";
    data.parent = "";
  }

  public static final String CATEGORY_OPTIONS = "options";

  public static final String SIEVE_PAIN_MULTIPLIER_KEY = "sieve frustration multiplier";

  public static int SIEVE_PAIN_MULTIPLIER = 0;

  public static final String ALLOW_BARRELS_KEY = "barrels allowed";

  public static boolean ALLOW_BARRELS = true;

  public static final String ALLOW_SIEVES_KEY = "sieves allowed";

  public static boolean ALLOW_SIEVES = true;

  public static final String ALLOW_CRUCIBLES_KEY = "crucibles allowed";

  public static boolean ALLOW_CRUCIBLES = true;

  public static final String ALLOW_HAMMERS_KEY = "hammers allowed";

  public static boolean ALLOW_HAMMERS = true;

  public static final String ALLOW_CROOKS_KEY = "crooks allowed";

  public static boolean ALLOW_CROOKS = true;

  public static final String ALLOW_SILKWORMS_KEY = "silkworms allowed";

  public static boolean ALLOW_SILKWORMS = true;

  public static final String ALLOW_SIEVE_AUTOMATION_KEY = "sieve automation allowed";

  public static boolean ALLOW_SIEVE_AUTOMATION = false;

  public static final String LEGACY_SIEVE_KEY = "enable legacy sieve(only sieve mesh)";

  public static boolean LEGACY_SIEVE = false;

  public static final String CATEGORY_OPTIONS_BARREL = "barrel options";

  public static final String ALLOW_BARREL_RECIPE_DIRT_KEY = "enable barrel recipe (dirt)";

  public static boolean ALLOW_BARREL_RECIPE_DIRT = true;

  public static final String ALLOW_BARREL_RECIPE_CLAY_KEY = "enable barrel recipe (clay)";

  public static boolean ALLOW_BARREL_RECIPE_CLAY = true;

  public static final String ALLOW_BARREL_RECIPE_NETHERRACK_KEY = "enable barrel recipe (netherrack)";

  public static boolean ALLOW_BARREL_RECIPE_NETHERRACK = true;

  public static final String ALLOW_BARREL_RECIPE_ENDSTONE_KEY = "enable barrel recipe (end stone)";

  public static boolean ALLOW_BARREL_RECIPE_ENDSTONE = true;

  public static final String ALLOW_BARREL_RECIPE_SLIME_KEY = "enable barrel recipe (slime)";

  public static boolean ALLOW_BARREL_RECIPE_SLIME = true;

  public static final String ALLOW_BARREL_RECIPE_SOULSAND_KEY = "enable barrel recipe (soul sand)";

  public static boolean ALLOW_BARREL_RECIPE_SOULSAND = true;

  public static final String ALLOW_BARREL_RECIPE_BLAZE_RODS_KEY = "enable barrel recipe (blaze rods)";

  public static boolean ALLOW_BARREL_RECIPE_BLAZE_RODS = true;

  public static final String ALLOW_BARREL_RECIPE_ENDER_PEARLS_KEY = "enable barrel recipe (ender pearls)";

  public static boolean ALLOW_BARREL_RECIPE_ENDER_PEARLS = true;

  public static final String ALLOW_BARREL_RECIPE_DARK_OAK_KEY = "enable barrel recipe (dark oak)";

  public static boolean ALLOW_BARREL_RECIPE_DARK_OAK = true;

  public static final String BARREL_ADDITIONS_KEY = "oredict additions for composting";

  public static String[] BARREL_ADDITIONS;

  public static final String BARREL_ADDITIONS_NONDICT_KEY = "additions for composting";

  public static String[] BARREL_ADDITIONS_NONDICT;

  public static final String ALLOW_BARREL_FILL_RAIN_KEY = "Allow barrels to fill when raining";

  public static boolean ALLOW_BARREL_FILL_RAIN = true;

  public static String CATEGORY_OPTIONS_SIEVE = "sieve options";

  public static String SIEVE_ADDITIONS_KEY = "oredict additions for sieving";

  public static String[] SIEVE_ADDITIONS;

  public static String SIEVE_ADDITIONS_NONDICT_KEY = "additions for sieving";

  public static String[] SIEVE_ADDITIONS_NONDICT;

  public static final String ALLOW_BARREL_RECIPE_DOUBLE_FLOWERS_KEY = "enable barrel recipe (double flowers)";

  public static boolean ALLOW_BARREL_RECIPE_DOUBLE_FLOWERS = true;

  public static final String CATEGORY_OPTIONS_COMPATIBILITY = "compatibility options";

  public static final String OVERWRITE_DEFAULT_MACERATOR_RECIPES_KEY = "overwrite default macerator recipes";

  public static boolean OVERWRITE_DEFAULT_MACERATOR_RECIPES = true;

  public static final String OVERWRITE_DEFAULT_PULVERIZER_RECIPES_KEY = "overwrite default pulverizer recipes";

  public static boolean OVERWRITE_DEFAULT_PULVERIZER_RECIPES = true;

  public static final String CATEGORY_OPTIONS_AGRICULTURE = "agriculture options";

  public static final String SILKWORM_STRING_PROBABILITY_KEY = "infested leaf string chance";

  public static double SILKWORM_STRING_PROBABILITY = 0.4D;

  public static final String CATEGORY_OPTIONS_CROOK = "crook options";

  public static final String LILYPAD_CHANCE_KEY = "lilypad chance (1 in n)";

  public static int LILYPAD_CHANCE = 100;

  public static final String CROOK_BLACKLIST_KEY = "crook blacklist";

  public static String[] CROOK_BLACKLIST;

  public static void load(Configuration config) {
    SIEVE_PAIN_MULTIPLIER = config.get(CATEGORY_OPTIONS, SIEVE_PAIN_MULTIPLIER_KEY, SIEVE_PAIN_MULTIPLIER).getInt(SIEVE_PAIN_MULTIPLIER);
    ALLOW_BARRELS = config.get(CATEGORY_OPTIONS, ALLOW_BARRELS_KEY, ALLOW_BARRELS).getBoolean(ALLOW_BARRELS);
    ALLOW_SIEVES = config.get(CATEGORY_OPTIONS, ALLOW_SIEVES_KEY, ALLOW_SIEVES).getBoolean(ALLOW_SIEVES);
    ALLOW_SIEVE_AUTOMATION = config.get(CATEGORY_OPTIONS, ALLOW_SIEVE_AUTOMATION_KEY, ALLOW_SIEVE_AUTOMATION).getBoolean(ALLOW_SIEVE_AUTOMATION);
    LEGACY_SIEVE = config.get(CATEGORY_OPTIONS, LEGACY_SIEVE_KEY, LEGACY_SIEVE).getBoolean(LEGACY_SIEVE);
    ALLOW_CRUCIBLES = config.get(CATEGORY_OPTIONS, ALLOW_CRUCIBLES_KEY, ALLOW_CRUCIBLES).getBoolean(ALLOW_CRUCIBLES);
    ALLOW_HAMMERS = config.get(CATEGORY_OPTIONS, ALLOW_HAMMERS_KEY, ALLOW_HAMMERS).getBoolean(ALLOW_HAMMERS);
    ALLOW_CROOKS = config.get(CATEGORY_OPTIONS, ALLOW_CROOKS_KEY, ALLOW_CROOKS).getBoolean(ALLOW_CROOKS);
    ALLOW_SILKWORMS = config.get(CATEGORY_OPTIONS, ALLOW_SILKWORMS_KEY, ALLOW_SILKWORMS).getBoolean(ALLOW_SILKWORMS);
    ALLOW_BARREL_RECIPE_DIRT = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_DIRT_KEY, ALLOW_BARREL_RECIPE_DIRT).getBoolean(ALLOW_BARREL_RECIPE_DIRT);
    ALLOW_BARREL_RECIPE_CLAY = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_CLAY_KEY, ALLOW_BARREL_RECIPE_CLAY).getBoolean(ALLOW_BARREL_RECIPE_CLAY);
    ALLOW_BARREL_RECIPE_NETHERRACK = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_NETHERRACK_KEY, ALLOW_BARREL_RECIPE_NETHERRACK).getBoolean(ALLOW_BARREL_RECIPE_NETHERRACK);
    ALLOW_BARREL_RECIPE_ENDSTONE = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_ENDSTONE_KEY, ALLOW_BARREL_RECIPE_ENDSTONE).getBoolean(ALLOW_BARREL_RECIPE_ENDSTONE);
    ALLOW_BARREL_RECIPE_SLIME = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_SLIME_KEY, ALLOW_BARREL_RECIPE_SLIME).getBoolean(ALLOW_BARREL_RECIPE_SLIME);
    ALLOW_BARREL_RECIPE_SOULSAND = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_SOULSAND_KEY, ALLOW_BARREL_RECIPE_SOULSAND).getBoolean(ALLOW_BARREL_RECIPE_SOULSAND);
    ALLOW_BARREL_RECIPE_BLAZE_RODS = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_BLAZE_RODS_KEY, ALLOW_BARREL_RECIPE_BLAZE_RODS).getBoolean(ALLOW_BARREL_RECIPE_BLAZE_RODS);
    ALLOW_BARREL_RECIPE_ENDER_PEARLS = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_ENDER_PEARLS_KEY, ALLOW_BARREL_RECIPE_ENDER_PEARLS).getBoolean(ALLOW_BARREL_RECIPE_ENDER_PEARLS);
    ALLOW_BARREL_RECIPE_DARK_OAK = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_DARK_OAK_KEY, ALLOW_BARREL_RECIPE_DARK_OAK).getBoolean(ALLOW_BARREL_RECIPE_DARK_OAK);
    ALLOW_BARREL_RECIPE_DOUBLE_FLOWERS = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_RECIPE_DOUBLE_FLOWERS_KEY, true).getBoolean();
    BARREL_ADDITIONS = config.get(CATEGORY_OPTIONS_BARREL, BARREL_ADDITIONS_KEY, "", "Format: oredictname:amounttofill:color \n Seperate with ;").getString().split(";");
    BARREL_ADDITIONS_NONDICT = config.get(CATEGORY_OPTIONS_BARREL, BARREL_ADDITIONS_NONDICT_KEY, "", "Format: modid:itemname:meta:amounttofill:color \n Seperate with ;").getString().split(";");
    ALLOW_BARREL_FILL_RAIN = config.get(CATEGORY_OPTIONS_BARREL, ALLOW_BARREL_FILL_RAIN_KEY, true).getBoolean();
    SILKWORM_STRING_PROBABILITY = config.get(CATEGORY_OPTIONS_AGRICULTURE, SILKWORM_STRING_PROBABILITY_KEY, SILKWORM_STRING_PROBABILITY).getDouble(SILKWORM_STRING_PROBABILITY);
    OVERWRITE_DEFAULT_MACERATOR_RECIPES = config.get(CATEGORY_OPTIONS_COMPATIBILITY, OVERWRITE_DEFAULT_MACERATOR_RECIPES_KEY, OVERWRITE_DEFAULT_MACERATOR_RECIPES).getBoolean(OVERWRITE_DEFAULT_MACERATOR_RECIPES);
    OVERWRITE_DEFAULT_PULVERIZER_RECIPES = config.get(CATEGORY_OPTIONS_COMPATIBILITY, OVERWRITE_DEFAULT_PULVERIZER_RECIPES_KEY, OVERWRITE_DEFAULT_PULVERIZER_RECIPES).getBoolean(OVERWRITE_DEFAULT_PULVERIZER_RECIPES);
    LILYPAD_CHANCE = config.get(CATEGORY_OPTIONS_CROOK, LILYPAD_CHANCE_KEY, LILYPAD_CHANCE).getInt();
    CROOK_BLACKLIST = config.get(CATEGORY_OPTIONS_CROOK, CROOK_BLACKLIST_KEY, "", "Format: modid:blockname:meta \n Seperate with ;").getString().split(";");
  }
}
